#summary Some of the bugs found by AddressSanitizer

=Chromium, !WebKit Safari, iTunes = 
  * http://googlechromereleases.blogspot.com/2011/10/chrome-stable-release.html
  * http://googlechromereleases.blogspot.com/2011/11/stable-channel-update.html
  * http://googlechromereleases.blogspot.com/2011/12/stable-channel-update.html
  * http://googlechromereleases.blogspot.com/2012/01/stable-channel-update.html
  * http://googlechromereleases.blogspot.com/2012/01/stable-channel-update_23.html
  * http://googlechromereleases.blogspot.com/2012/02/stable-channel-update.html
  * http://googlechromereleases.blogspot.com/2012/02/chrome-stable-update.html
  * http://googlechromereleases.blogspot.com/2012/03/chrome-stable-update.html
  * http://googlechromereleases.blogspot.com/2012/04/stable-and-beta-channel-updates.html
  * http://googlechromereleases.blogspot.com/2012/04/stable-channel-update_30.html
  * http://googlechromereleases.blogspot.com/2012/05/stable-channel-update.html
  * http://googlechromereleases.blogspot.com/2012/05/stable-channel-update_23.html
  * http://googlechromereleases.blogspot.com/2012/06/stable-channel-update_26.html
  * http://googlechromereleases.blogspot.com/2012/07/stable-channel-update.html
  * http://googlechromereleases.blogspot.com/2012/07/stable-channel-release.html
  * http://googlechromereleases.blogspot.com/2012/08/stable-channel-update.html
  * http://googlechromereleases.blogspot.com/2012/08/stable-channel-update_30.html
  * http://googlechromereleases.blogspot.com/2012/09/stable-channel-update_25.html
  * http://googlechromereleases.blogspot.com/2012/10/stable-channel-update.html
  * http://googlechromereleases.blogspot.com/2012/11/stable-channel-release-and-beta-channel.html
  * http://support.apple.com/kb/HT5000
  * http://support.apple.com/kb/HT5192
  * http://support.apple.com/kb/HT5400
  * http://support.apple.com/kb/HT5485
  * http://support.apple.com/kb/HT5502

Chromium's asan bot: http://build.chromium.org/p/chromium.memory/console

=Mozilla=
  * https://bugzilla.mozilla.org/show_bug.cgi?id=709483
  * https://bugzilla.mozilla.org/show_bug.cgi?id=709580
  * http://www.mozilla.org/security/announce/2012/mfsa2012-14.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-21.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-22.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-23.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-31.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-38.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-40.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-44.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-48.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-58.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-62.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-63.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-65.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-85.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-86.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-87.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-92.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-96.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-105.html
  * http://www.mozilla.org/security/announce/2012/mfsa2012-106.html

See also http://blog.mozilla.com/decoder/2012/01/27/trying-new-code-analysis-techniques/#more-14

=ffmpeg=
Some (but not all) bugs found in [http://ffmpeg.org/ ffmpeg]: 
  * http://git.videolan.org/?p=ffmpeg.git;a=commit;h=1149fbc7631a8c2258386f9aa247806715493b10
  * http://git.videolan.org/?p=ffmpeg.git;a=commit;h=e0966eb140b3569b3d6b5b5008961944ef229c06
  * http://git.videolan.org/?p=ffmpeg.git;a=commit;h=bb4b0ad83b13c3af57675e80163f3f333adef96f
  * http://git.videolan.org/?p=ffmpeg.git;a=commit;h=0d7a16a9467eab58aca4508a70cb546741664ac0

ffmpeg's asan bot: http://fate.libav.org/x86_64-linux-clang-asan

=FreeType=
  * http://savannah.nongnu.org/search/?words=AddressSanitizer&type_of_search=bugs&Search=Search&exact=1#options (20+ bugs)

=webrtc=
  * http://code.google.com/p/webrtc/issues/detail?id=281
  * http://code.google.com/p/webrtc/issues/detail?id=282
=perl=
  * https://rt.cpan.org/Ticket/Display.html?id=72700
  * https://rt.perl.org/rt3/Ticket/Display.html?id=111594
  * https://rt.perl.org/rt3/Ticket/Display.html?id=111586
  * https://rt.perl.org/rt3/Public/Bug/Display.html?id=113060 

=parrot (http://www.parrot.org/)=
  * https://github.com/parrot/parrot/commit/df12f34e946553
  * https://github.com/parrot/parrot/commit/b58a50c2b147c
  * https://github.com/parrot/parrot/commit/1e5f20eefce263

=MySQL=
  * http://bugs.mysql.com/bug.php?id=67242
  * http://bugs.mysql.com/bug.php?id=67243
  * http://bugs.mysql.com/bug.php?id=67244

=vim=
http://www.mail-archive.com/vim_dev@googlegroups.com/msg15549.html

=Phusion Passenger (https://www.phusionpassenger.com/)=
  * https://github.com/FooBarWidget/passenger/commit/795e8bb2f5b82b332ea26ba2d7c902317aa62fe9
  * https://github.com/FooBarWidget/passenger/commit/45c11efb6d0de8e182b74f81dba1cd370b58368d

=Percona Server with XtraDB (http://www.percona.com/software/percona-server)=
  * https://bugs.launchpad.net/percona-server/+bug/1067103

=LLVM=
  * http://llvm.org/bugs/show_bug.cgi?id=12245
  * http://llvm.org/bugs/show_bug.cgi?id=12267
  * http://llvm.org/bugs/show_bug.cgi?id=12284
  * http://llvm.org/bugs/show_bug.cgi?id=12305
  * http://llvm.org/viewvc/llvm-project?view=rev&revision=140427
  * http://llvm.org/viewvc/llvm-project?view=rev&revision=152738
  * http://llvm.org/bugs/show_bug.cgi?id=14186
(and some more)

=GCC=
http://gcc.gnu.org/bugzilla/show_bug.cgi?id=52629

=Spec CPU 2006 =
Use-after-free in 400.perlbench (a pointer is used after it is passed to `realloc`).
{{{
READ of size 1 at 0x00000000023b7413 thread T0 (bad: 0x00002000008edd04; shadow: 0x0000100000476e82)
    #0 0x66490a in Perl_sv_setpvn sv.c:4127
    #1 0x45766c in Perl_magic_get mg.c:772
    #2 0x453bcb in Perl_mg_get mg.c:169
    #3 0x669fb8 in Perl_sv_setsv_flags sv.c:3796
    #4 0x684c3f in Perl_sv_mortalcopy sv.c:6748
    #5 0x56fedd in Perl_pp_leaveeval pp_ctl.c:3486
    #6 0x635d44 in Perl_runops_standard run.c:37
    #7 0x4d2ad6 in S_run_body perl.c:2017
    #8 0x4f9077 in main perlmain.c:100
    #9 0x7fa3900e2c4d in __libc_start_main ??:0
    #10 0x403519 in _start ??:0
0x00000000023b7413 is located 3 bytes inside of 5-byte region [0x00000000023b7410,0x00000000023b7415)
freed by thread T0 here:
    #0 0x7bc852 in realloc _asan_rtl_
    #1 0x733e2e in Perl_safesysrealloc util.c:132
    #2 0x650a82 in Perl_sv_grow sv.c:1620
    #3 0x66c3f5 in Perl_sv_setsv_flags sv.c:4012
    #4 0x5735e8 in Perl_pp_sassign pp_hot.c:122
    #5 0x635d44 in Perl_runops_standard run.c:37
    #6 0x4d2ad6 in S_run_body perl.c:2017
    #7 0x4f9077 in main perlmain.c:100
    #8 0x7fa3900e2c4d in __libc_start_main ??:0
previously allocated by thread T0 here:
    #0 0x7bc852 in realloc _asan_rtl_
    #1 0x733e2e in Perl_safesysrealloc util.c:132
    #2 0x650a82 in Perl_sv_grow sv.c:1620
    #3 0x6745f5 in Perl_sv_catpvn_flags sv.c:4376
    #4 0x675027 in Perl_sv_catsv_flags sv.c:4460
    #5 0x5402a3 in Perl_pp_substcont pp_ctl.c:190
    #6 0x635d44 in Perl_runops_standard run.c:37
    #7 0x4d2ad6 in S_run_body perl.c:2017
    #8 0x4f9077 in main perlmain.c:100
    #9 0x7fa3900e2c4d in __libc_start_main ??:0
}}}


Stack buffer overflow in 464.h264ref:
{{{
int k, satd = 0, m[16], dd, d[16];
...
for (dd=d[k=0]; k<16; dd=d[++k])
                         ^^^^^^
// On the last iteration, d[++k] reads d[16], one element after the array boundary.

READ of size 4 mem: 0x00007fff516bd140 thread T0
#0 0x506211 in SATD mv-search.c:1093
#1 0x509524 in SubPelBlockMotionSearch mv-search.c:1398
#2 0x527300 in BlockMotionSearch mv-search.c:2672
#3 0x53091e in PartitionMotionSearch mv-search.c:3272
...
Address 0x00007fff516bd140 is inside T0's stack
}}}

Global buffer overflow in 464.h264ref:
{{{
context_ini.c:222:
BIARI_CTX_INIT2 (NUM_BLOCK_TYPES, NUM_BCBP_CTX, tc->bcbp_contexts,    INIT_BCBP,      img->model_number);

READ of size 4 at 0x00000000005ec1c0 thread T0
    #0 0x4139cf in biari_init_context biariencode.c:334
    #1 0x43f8f3 in init_contexts context_ini.c:222
    #2 0x5a6f33 in start_slice slice.c:118
    #3 0x5a93b7 in encode_one_slice slice.c:223
    #4 0x466d7a in code_a_picture image.c:236
    #5 0x4728c0 in frame_picture image.c:800
    #6 0x4696ef in encode_one_frame image.c:411
    #7 0x48167d in main lencod.c:413
0x00000000005ec1c0 is located 0 bytes to the right of global variable 'INIT_BCBP_I' (0x5ec0c0) of size 256

}}}